{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","robot","name","email","id","className","src","alt","CardList","cardComponent","robots","map","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","e","searchField","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCSCQ,EAdF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACNC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GAErB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACE,6BAAKL,IACL,4BAAIC,WCDGK,EANE,SAAC,GAAgB,IAC1BC,EADyB,EAAbC,OACWC,KAAI,SAACV,EAAOW,GAAR,OAAc,cAAC,EAAD,CAAMX,MAAOA,GAAYW,MAExE,OAAO,8BAAMH,KCSAI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,eACZC,SAAUH,OCHHI,G,MAJA,SAACC,GACd,OAAO,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SAAkFJ,EAAMK,aCoBlFC,E,kDApBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,uDAGFG,KAAKX,MAAMK,a,GAjBKQ,aC8CZC,E,kDAxCb,aAAe,IAAD,8BACZ,gBAOFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAEE,OAAOC,SAPtC,EAAKZ,MAAQ,CACXhB,OAAQ,GACR0B,YAAa,IAJH,E,qDAYd,WAAqB,IAAD,OAClBG,MAAM,8CACH7C,MAAK,SAAC8C,GAAD,OAAcA,EAASC,UAC5B/C,MAAK,SAACgD,GACL,EAAKX,SAAS,CAAErB,OAAQgC,S,oBAI9B,WAAU,IAAD,EACyBZ,KAAKJ,MAA7BhB,EADD,EACCA,OAAQ0B,EADT,EACSA,YACVO,EAAiBjC,EAAOkC,QAAO,SAAC3C,GAAD,OAAWA,EAAMC,KAAK2C,cAAcC,SAASV,MAElF,OAAO1B,EAAOqC,OACZ,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQiC,WAKxB,gD,GApCYX,a,MCAlBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1B7D,M","file":"static/js/main.a080dd9a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nconst Card = ({ robot }) => {\n  const { name, email, id } = robot\n\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img src={`https://robohash.org/${id}?200x200`} alt='robots' />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardComponent = robots.map((robot, i) => <Card robot={robot} key={i} />)\r\n\r\n  return <div>{cardComponent}</div>\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robot'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  return <div style={{ overflowY: 'scroll', border: '1px solid black', height: '800px' }}>{props.children}</div>\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooops.That is no good</h1>\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React, { Component } from 'react'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchField: '',\r\n    }\r\n  }\r\n\r\n  onSearchChange = (e) => {\r\n    this.setState({ searchField: e.target.value })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => {\r\n        this.setState({ robots: users })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state\r\n    const filteredRobots = robots.filter((robot) => robot.name.toLowerCase().includes(searchField))\r\n\r\n    return robots.length ? (\r\n      <div className='tc'>\r\n        <h1 className='f1'>RobotFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    ) : (\r\n      <h1>Loading...</h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport App from './containers/App'\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}